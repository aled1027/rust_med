@use "tokens" as *;

body {
    line-height: $leading-loose;
    overflow-x: hidden;

    font-family: $font-sans;
    font-optical-sizing: auto;

    background-color: var(--bg-color);
    color: var(--color-text);
    margin: 0;
    padding: 0;
    font-size: $step-0;
}

h1,
h2,
h3 {
    line-height: $leading-tight;
    margin: 0;
}

h1 {
    font-size: $step-8;
    color: var(--color-primary);
}

h2 {
    font-size: $step-4;
}

h2:has(svg) {
    display: flex;
    align-items: center;
    gap: 0.375em;
}

h3 {
    font-size: $step-1;
}

a {
    color: currentColor;
}

table {
    border-collapse: collapse;
}

th {
    text-align: left;
}

:focus {
    /* Use defaults for now */
    /* outline: 2px dotted; */
    /* outline-offset: 0.25rem; */
}

footer {
    height: $space-3xl;
}

svg:not([class]) {
    width: auto;
    height: 1lh;
}

svg {
    flex-shrink: 0;
}

details {
    padding-block: $space-xs;
    padding-inline: $space-xs;

    border: 1px solid var(--notebook-border-color);
    border-radius: $radius-s;
    background-color: var(--notebook-surface-bg-color);
    color: var(--color-text);
}

summary {
    font-size: $step--1;
    cursor: pointer;
}

textarea {
    width: 100%;
    padding: 0.75em .875em;
    border: 1px solid var(--notebook-border-color);
    border-radius: $radius-s;

    background-color: var(--notebook-surface-bg-color);
    color: var(--color-text);
}

p {
    margin-block-start: 1lh;
}

button {
    border: none;
    cursor: pointer;
}

/* INPUTS */

/* There's a .flow composition, but this prevents forms from having to have that applied where markup is harder to control in certain systems. It still uses the flow-space variables though to make managing space easier */
form>*+* {
    margin-top: $flow-space;
}

:is(input, select, textarea) {
    accent-color: var(--color-primary);
}

:is(input:not([type='checkbox'], [type='radio'], [type='color']), select, textarea) {
    padding: 0.5em 0.8em;
    border-radius: $radius-s;
    border: $stroke;
    color: var(--color-text);
    background: var(--input-bg-color);
    width: 100%;

    &::placeholder {
        color: var(--color-text-light);
        opacity: 1;
    }
}

:is(input[type='date'], input[type='datetime-local']) {
    &::placeholder {
        color: black !important;
        opacity: 1;
    }
}

select.select-light {
    background: transparent;
    color: var(--color-text-light3);
    width: auto;
    padding: 0.25rem 0.5rem;
    border: 1px solid var(--color-text-light3);
    border-radius: $radius-s;
}

label {
    line-height: $leading-tight;
    font-weight: $font-semibold;
}

label::after {
    content: '\A';
    white-space: pre;
}

/* Usually label wraps checkbox and radio buttons, so we give ourselves more layout and text-flow control with flex */
label:has(input) {
    display: flex;
    align-items: first baseline;
    gap: $space-2xs;
    font-weight: $font-regular;
}

label:has(input)+label:has(input) {
    margin-top: $space-s-m;
}

input:disabled {
    background: var(--color-text-light);
}

input:disabled,
label input:disabled+* {
    cursor: not-allowed;
}

/* Sets a sensible height if textarea rows attribute is missing */
textarea:not([rows]) {
    min-height: 10em;
}

fieldset {
    border: 1px solid var(--notebook-border-color);
    padding: $space-s;
}

legend {
    padding-inline: $space-xs;
}

audio {
    display: block;
    width: 100%;
    color: blue;
    accent-color: red;
}